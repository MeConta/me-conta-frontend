name: CICD - Frontend - Heroku
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Build
        run: npm run build
      - name: Run Tests
        run: npm run coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: google-chat-notification
        uses: Co-qn/google-chat-notification@v1
        if: failure()
        with:
          name: Build Failure
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}


  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: DEV
      url: https://me-conta-frontend.herokuapp.com
    needs:
      - build-and-test
    env:
      HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      HEROKU_APP_NAME: me-conta-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login no Heroku Container
        run: heroku container:login
      - name: Build docker image
        env:
          NODE_ENV: production
          API_URL: ${{ secrets.API_URL }}
        run: |
          docker build . -f Dockerfile.web -t frontend --build-arg $NODE_ENV --build-arg $API_URL
          docker tag frontend registry.heroku.com/$HEROKU_APP_NAME/web
      - name: Push docker image to Heroku
        run: docker push registry.heroku.com/$HEROKU_APP_NAME/web
      - name: Release to Heroku
        run: heroku container:release -a $HEROKU_APP_NAME web
      - name: google-chat-notification
        uses: Co-qn/google-chat-notification@v1
        if: failure()
        with:
          name: Deploy Dev Failure
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: ${{ job.status }}

  deploy-hml:
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs: deploy-dev
    environment: HML
    steps:
      - name: test
        run: echo 'deploy on hml'

  deploy-prd:
    runs-on: ubuntu-latest
    if: ${{ false }}
    needs: deploy-hml
    environment: PRD
    steps:
      - name: test
        run: echo 'deploy on prd'
