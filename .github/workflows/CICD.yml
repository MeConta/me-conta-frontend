name: CICD
on:
  push:
    branches: [main]
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Dependencies
        uses: bahmutov/npm-install@v1
      - name: Run Tests
        run: npm run coverage
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy-dev:
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login no Heroku Container
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build docker image
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          NODE_ENV: production
          API_URL: ${{ secrets.API_URL }}
        run: |
          docker build . -f Dockerfile.web -t frontend --build-arg NODE_ENV --build-arg API_URL
          docker tag frontend registry.heroku.com/${{ secrets.HEROKU_FRONTEND_APP_NAME }}/web
      - name: Push docker image to Heroku
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker push registry.heroku.com/${{ secrets.HEROKU_FRONTEND_APP_NAME }}/web
      - name: Release to Heroku
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_FRONTEND_APP_NAME }} web
  storybook:
    runs-on: ubuntu-latest
    needs:
      - analysis
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Login no Heroku Container
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      - name: Build Docker image
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          PORT: 8080
        run: |
          docker build . -f Dockerfile.storybook -t storybook --build-arg PORT
          docker tag storybook registry.heroku.com/${{ secrets.HEROKU_STORYBOOK_APP_NAME }}/web
      - name: Push Docker image to Heroku
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: docker push registry.heroku.com/${{ secrets.HEROKU_STORYBOOK_APP_NAME }}/web
      - name: Release to Heroku
        working-directory: frontend
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release -a ${{ secrets.HEROKU_STORYBOOK_APP_NAME }} web
